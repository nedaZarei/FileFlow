services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: /app/producer
    volumes:
      - .:/code
    networks:
      - mynetwork
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8000:8000"
    environment: {}
    depends_on:
      - db
      - kafka

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: simpleapi_database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork
    ports:
      - "5432:5432"

  kafka:
    restart: always
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_LISTENER_NAME_INTERNAL=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_NAME_EXTERNAL=PLAINTEXT://localhost:9093
      - KAFKA_LISTENER_NAME_ADVERTISED=PLAINTEXT://localhost:9093
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_MESSAGE_MAX_BYTES=2097152  
      - KAFKA_REPLICA_FETCH_MAX_BYTES=2097152  
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - mynetwork

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_MAX_BUFFER=2097152 
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - mynetwork

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - zookeeper
    networks:
      - mynetwork

volumes:
  postgres_data:
  minio_data:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  mynetwork:
    driver: bridge

